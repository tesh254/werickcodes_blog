<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>golang on Werick Codes</title>
    <link>/tags/golang/</link>
    <description>Recent content in golang on Werick Codes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright Â© 1960-2095, Erick Wachira; all rights reserved.</copyright>
    <lastBuildDate>Sat, 08 Feb 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Create API with Gin in Golang Part 1</title>
      <link>/blog/create-golang-api-with-gin-and-mongo/</link>
      <pubDate>Sat, 08 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/create-golang-api-with-gin-and-mongo/</guid>
      <description>I just started learning to Golang recently, and I must say the Golang is not that difficult. To fully grasp the syntax as a web developer I opted to create an API.
In this blog, we are going to create an Authentication API with the help of the gin web framework and use a MongoDB database with the help of mgo.v2
This blog will be a two-part series covering all authentication endpoints: * The first part focuses on basic Signup and Login of a user.</description>
    </item>
    
  </channel>
</rss>